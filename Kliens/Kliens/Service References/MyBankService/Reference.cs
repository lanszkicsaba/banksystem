//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kliens.MyBankService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hiba", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class Hiba : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HibaTipusaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MuveletField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HibaTipusa {
            get {
                return this.HibaTipusaField;
            }
            set {
                if ((object.ReferenceEquals(this.HibaTipusaField, value) != true)) {
                    this.HibaTipusaField = value;
                    this.RaisePropertyChanged("HibaTipusa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Muvelet {
            get {
                return this.MuveletField;
            }
            set {
                if ((object.ReferenceEquals(this.MuveletField, value) != true)) {
                    this.MuveletField = value;
                    this.RaisePropertyChanged("Muvelet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utal", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class Utal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EredmenyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FelhnevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OsszegField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Eredmeny {
            get {
                return this.EredmenyField;
            }
            set {
                if ((this.EredmenyField.Equals(value) != true)) {
                    this.EredmenyField = value;
                    this.RaisePropertyChanged("Eredmeny");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Felhnev {
            get {
                return this.FelhnevField;
            }
            set {
                if ((object.ReferenceEquals(this.FelhnevField, value) != true)) {
                    this.FelhnevField = value;
                    this.RaisePropertyChanged("Felhnev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Osszeg {
            get {
                return this.OsszegField;
            }
            set {
                if ((this.OsszegField.Equals(value) != true)) {
                    this.OsszegField = value;
                    this.RaisePropertyChanged("Osszeg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utalasok", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class Utalasok : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IdoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OsszegField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Ido {
            get {
                return this.IdoField;
            }
            set {
                if ((this.IdoField.Equals(value) != true)) {
                    this.IdoField = value;
                    this.RaisePropertyChanged("Ido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nev {
            get {
                return this.NevField;
            }
            set {
                if ((object.ReferenceEquals(this.NevField, value) != true)) {
                    this.NevField = value;
                    this.RaisePropertyChanged("Nev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Osszeg {
            get {
                return this.OsszegField;
            }
            set {
                if ((this.OsszegField.Equals(value) != true)) {
                    this.OsszegField = value;
                    this.RaisePropertyChanged("Osszeg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyBankService.IBank")]
    public interface IBank {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Bejelentkezes", ReplyAction="http://tempuri.org/IBank/BejelentkezesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Kliens.MyBankService.Hiba), Action="http://tempuri.org/IBank/BejelentkezesHibaFault", Name="Hiba", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string Bejelentkezes(string uname, string passwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Bejelentkezes", ReplyAction="http://tempuri.org/IBank/BejelentkezesResponse")]
        System.Threading.Tasks.Task<string> BejelentkezesAsync(string uname, string passwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Kijelentkezes", ReplyAction="http://tempuri.org/IBank/KijelentkezesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Kliens.MyBankService.Hiba), Action="http://tempuri.org/IBank/KijelentkezesHibaFault", Name="Hiba", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string Kijelentkezes(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Kijelentkezes", ReplyAction="http://tempuri.org/IBank/KijelentkezesResponse")]
        System.Threading.Tasks.Task<string> KijelentkezesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Feltoltes", ReplyAction="http://tempuri.org/IBank/FeltoltesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Kliens.MyBankService.Hiba), Action="http://tempuri.org/IBank/FeltoltesHibaFault", Name="Hiba", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string Feltoltes(int osszeg, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Feltoltes", ReplyAction="http://tempuri.org/IBank/FeltoltesResponse")]
        System.Threading.Tasks.Task<string> FeltoltesAsync(int osszeg, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Lekerdezes", ReplyAction="http://tempuri.org/IBank/LekerdezesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Kliens.MyBankService.Hiba), Action="http://tempuri.org/IBank/LekerdezesHibaFault", Name="Hiba", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        string Lekerdezes(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Lekerdezes", ReplyAction="http://tempuri.org/IBank/LekerdezesResponse")]
        System.Threading.Tasks.Task<string> LekerdezesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Utalas", ReplyAction="http://tempuri.org/IBank/UtalasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Kliens.MyBankService.Hiba), Action="http://tempuri.org/IBank/UtalasHibaFault", Name="Hiba", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        Kliens.MyBankService.Utal Utalas(string felhnev, int osszeg, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/Utalas", ReplyAction="http://tempuri.org/IBank/UtalasResponse")]
        System.Threading.Tasks.Task<Kliens.MyBankService.Utal> UtalasAsync(string felhnev, int osszeg, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/UtalasokList", ReplyAction="http://tempuri.org/IBank/UtalasokListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Kliens.MyBankService.Hiba), Action="http://tempuri.org/IBank/UtalasokListHibaFault", Name="Hiba", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
        Kliens.MyBankService.Utalasok[] UtalasokList(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/UtalasokList", ReplyAction="http://tempuri.org/IBank/UtalasokListResponse")]
        System.Threading.Tasks.Task<Kliens.MyBankService.Utalasok[]> UtalasokListAsync(string uid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankChannel : Kliens.MyBankService.IBank, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankClient : System.ServiceModel.ClientBase<Kliens.MyBankService.IBank>, Kliens.MyBankService.IBank {
        
        public BankClient() {
        }
        
        public BankClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BankClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Bejelentkezes(string uname, string passwd) {
            return base.Channel.Bejelentkezes(uname, passwd);
        }
        
        public System.Threading.Tasks.Task<string> BejelentkezesAsync(string uname, string passwd) {
            return base.Channel.BejelentkezesAsync(uname, passwd);
        }
        
        public string Kijelentkezes(string uid) {
            return base.Channel.Kijelentkezes(uid);
        }
        
        public System.Threading.Tasks.Task<string> KijelentkezesAsync(string uid) {
            return base.Channel.KijelentkezesAsync(uid);
        }
        
        public string Feltoltes(int osszeg, string uid) {
            return base.Channel.Feltoltes(osszeg, uid);
        }
        
        public System.Threading.Tasks.Task<string> FeltoltesAsync(int osszeg, string uid) {
            return base.Channel.FeltoltesAsync(osszeg, uid);
        }
        
        public string Lekerdezes(string uid) {
            return base.Channel.Lekerdezes(uid);
        }
        
        public System.Threading.Tasks.Task<string> LekerdezesAsync(string uid) {
            return base.Channel.LekerdezesAsync(uid);
        }
        
        public Kliens.MyBankService.Utal Utalas(string felhnev, int osszeg, string uid) {
            return base.Channel.Utalas(felhnev, osszeg, uid);
        }
        
        public System.Threading.Tasks.Task<Kliens.MyBankService.Utal> UtalasAsync(string felhnev, int osszeg, string uid) {
            return base.Channel.UtalasAsync(felhnev, osszeg, uid);
        }
        
        public Kliens.MyBankService.Utalasok[] UtalasokList(string uid) {
            return base.Channel.UtalasokList(uid);
        }
        
        public System.Threading.Tasks.Task<Kliens.MyBankService.Utalasok[]> UtalasokListAsync(string uid) {
            return base.Channel.UtalasokListAsync(uid);
        }
    }
}
